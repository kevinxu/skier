import pygame,sys,randomskier_images=["skier_down.png",'skier_right1.png','skier_right2.png',              'skier_left2.png','skier_left1.png']skier_down = 0skier_right1 = 1skier_right2 = 2skier_left1 = -1skier_left2 = -2# 1 - easy; 2 - medium 3 - difficultlevel = 1class SkierClass(pygame.sprite .Sprite ):    def __init__(self):        pygame.sprite.Sprite .__init__(self)        self.image=pygame.image.load(skier_images[skier_down])        self.rect=self.image.get_rect()        self.rect.center=[320,100]        self.angle=0    def turn(self,direction):        self.angle=self.angle+direction        if self.angle<-2:self.angle=-2        if self.angle>2:self.angle=2        center=self.rect.center        self.image=pygame.image.load(skier_images[self.angle])        self.rect=self.image.get_rect()        self.rect.center=center        speed = [self.angle,10-abs(self.angle)*2]        return speed    def move(self,speed):        self.rect.centerx=self.rect.centerx+speed[0]        if self.rect.centerx<20:self.rect.centerx=20        if self.rect.centerx>620:self.rect.centerx=620class ObstacleClass(pygame.sprite .Sprite):    def __init__(self,image_file,location,type):        pygame.sprite.Sprite.__init__ (self)        self.image_file=image_file        self.image=pygame.image .load(image_file)        self.location=location        self.rect=self.image.get_rect()        self.rect.center=location        self.type=type        self.passed=False    def update(self):        global speed        self.rect.centery -= speed[1]        if self.rect.centery < -32:            self.kill()def create_map(start,end):    global obstacles    locations=[]    for i in range(10):        row = random.randint(start, end)        col=random.randint(start, end)        location = [col * 64 + 32, row * 64 + 32 + 640]        if not(location in locations):            locations.append(location)            if level == 1: type = random.choice(['tree', 'flag'])            elif level == 2: type = random.choice(['tree', 'tree', 'flag'])            elif level == 3: type = random.choice(['tree', 'tree', 'tree', 'flag'])            if type == 'tree':img='skier_tree.png'            elif type == 'flag':img='skier_flag.png'            obstacle=ObstacleClass(img,location,type)            obstacles.add(obstacle)def animate():    screen.fill([255,255,255])    # screen.blit(background, (0, 0))    obstacles.draw(screen)    screen.blit(skier.image, skier.rect)    screen.blit(score_text, [10, 10])    screen.blit(font.render("The Asian Games", 1, (255, 0, 0)), [430, 10])    pygame.display.flip()pygame.init()pygame.display.set_caption("The Asian Games: Skier")screen=pygame.display.set_mode([640, 640])# background = pygame.image.load("bg.jpeg")clock=pygame.time.Clock()points = 0skier = SkierClass()speed=[0,9]obstacles = pygame.sprite.Group()map_position=0create_map(0, 9)font = pygame.font.Font(None, 30)running = Truewhile running:    clock.tick(30)    for event in pygame.event.get():        if event.type==pygame.QUIT: running = False        if event.type == pygame.KEYDOWN:            if event.key == pygame.K_LEFT:                speed = skier.turn(-1)            elif event.key == pygame.K_RIGHT:                speed = skier.turn(1)    skier.move(speed)    map_position += speed[1]    if map_position >= 640:        create_map(0, 9)        map_position = 0    hit = pygame.sprite.spritecollide(skier, obstacles, False)    if hit:        if hit[0].type == "tree" and not hit[0].passed:            points -= 100            skier.image = pygame.image.load("skier_crash.png")            animate()            pygame.time.delay(1000)            skier.image = pygame.image.load("skier_down.png")            skier.angle = 0            speed = [0, 6]            hit[0].passed = True        elif hit[0].type == "flag" and not hit[0].passed:            points += 10            hit[0].kill()    obstacles.update()    score_text = font.render("Score: " + str(points), 1, (0, 0, 0))    animate()pygame.quit()